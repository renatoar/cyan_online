package demands.main

import demands.gp
import demands.hp, demands.cp

open
object Program 
/*
        Array<R> in [ Array<Int>, Array<String> ]
        Array<R> implements Iterable<Int>
        S implements Iterable<Char>
        T subtype Array<R>

*/

    func test {
        
        var h2 = H<Int, Array<Char>, Array<Int>> new;
        h2 test;

        
        let G<Int, MyFile, SubProgram> g0 = G<Int, MyFile, SubProgram> new;
        g0 test;
        
        var g00 = G<cyan.lang.Byte, SubMyFile, SubSubProgram> new;
        g00 test;
        
        var g01 = G<SubMyFile, Openable> new;
        g01 test;
        
        //var G<String, MyFile, SubProgram> g1 = G<String, MyFile, SubProgram> new;
        //var G<Long, Program, SubProgram> g2 = G<Long, Program, SubProgram> new;
        //var G<Char, MyFile, String> g3 = G<Char, MyFile, String> new;
        
        
    }
    
end

/*
   R belongs [ "Int", "Short", "Byte", "Char", "Long" ]
   S implements Openable
   T subtype Program
   
*/

/*
        R subtype S
        MyFile implements S

*/

/*
        Array<R> belongs [ "Array<Int>", "Array<String>" ]
        Array<R> implements Iterable<Int>
        S implements Iterable<Char>
        T subtype Array<R>

*/
