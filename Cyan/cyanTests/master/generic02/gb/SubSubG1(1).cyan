package generic02.gb

object SubSubG1<T>  extends G2<T> implements I2<T>
    func init {
        super init;
    }
    func init: G2<T> _value {
        super init: _value
    }
    
    func noop: I2<T> -> Array<T> {
        let Array<T> a = Array<T> new;
        a add: (T defaultValue) succ;
        return a
    }
    
    func succ: T n -> Int = n succ succ;
    func pred: T elem -> T = T pred;  
end
