package main.letters

object UnionAssignTest

    func run {
        var Array<Byte> byteArray = [ 0B, 1B ];
        var Array<Int|Char> intCharArray = Array<Int|Char>();
        var Array<String|Char|Int> intCharStringArray = Array<String|Char|Int>();
        var otherArray = Array<Int|Char>();
        
        var Any any = 0;
        var Dyn dyn = 0;
        var A a = A();
        var B b = B();
        var C c = C();
        var D d = D();
        var E e = E();
        var B|main.letters.A ab = a;        
        var B|C bc = b;
        var main.letters.B|D bd = d;
        var D|C dc = c; 
        var E|main.letters.D ed = d; 
        var A|Any aany = a;
        var A|Dyn adyn = a;
        // b = ab; // error
        ab = b;
        // b = bc; // error
        bc = b;
        // b = bd; // error
        a = bd;
        a = bc;
        any = bc;
        dyn = ab;
        any = bd;
        // d = bd; // error
        c = dc;
        a = dc;
        dyn = dc;
        c = ed;
        
        var B|A ba = a;
        ba = ed;
        ba = dc;
        aany = ed;
        aany = dc;
        adyn = ed;
        adyn = ed;
        var C|B|A cba = a;
        var E|main.letters.D|C|main.letters.B|A edcba = a;
        edcba = cba;
        cba = edcba;
        var main.letters.B|E|D|C bedc = b;
        var E|main.letters.D|C edc = e;
        bedc = ed;
        bedc = b;
        bedc = edc;
        // edc = bedc; // error
        
        var a_bedc = Array<B|main.letters.E|D|main.letters.C>();
        a_bedc add: b;
        a_bedc add: e;
        a_bedc add: d;
        a_bedc add: c;
        a_bedc add: edc;
        a_bedc add: dc;

        
        var A|Array<B|Array<C>> aArrayBArrayC = a;
        
        self ff: ed;
    }
    
    func ff: C elem { }



end

